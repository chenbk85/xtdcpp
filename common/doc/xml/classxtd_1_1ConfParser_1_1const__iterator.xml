<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classxtd_1_1ConfParser_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>xtd::ConfParser::const_iterator</compoundname>
    <includes refid="ConfParser_8hh" local="no">ConfParser.hh</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classxtd_1_1ConfParser_1_1const__iterator_1a4f49bb5f692aa9b4f8ccf8081a3d9f67" prot="private" static="no">
        <type>std::pair&lt; const char *, const char * &gt;</type>
        <definition>typedef std::pair&lt;const char*, const char*&gt; xtd::ConfParser::const_iterator::t_result</definition>
        <argsstring></argsstring>
        <name>t_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="37" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxtd_1_1ConfParser_1_1const__iterator_1acbfbd6e9d13dc0aa004169f245413c89" prot="private" static="no" mutable="no">
        <type>t_section_list::const_iterator</type>
        <definition>t_section_list::const_iterator xtd::ConfParser::const_iterator::m_iter</definition>
        <argsstring></argsstring>
        <name>m_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="53" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xtd::ConfParser::const_iterator::const_iterator</definition>
        <argsstring>(void)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="40" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="139" bodyend="141"/>
        <referencedby refid="classxtd_1_1ConfParser_1a18fa4083def8aaf86796b9ddbc331daf" compoundref="ConfParser_8hh" startline="216" endline="219">xtd::ConfParser::begin</referencedby>
        <referencedby refid="classxtd_1_1ConfParser_1ab772ae8e571f1a3f719eca2f9d056d7c" compoundref="ConfParser_8hh" startline="222" endline="225">xtd::ConfParser::end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1af09c45149cd53e97902123aa770c0867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xtd::ConfParser::const_iterator::const_iterator</definition>
        <argsstring>(const const_iterator &amp;p_obj)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>p_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="41" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a0fb34a1a672ceecfc5eb756e712bb977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xtd::ConfParser::const_iterator::const_iterator</definition>
        <argsstring>(const t_section_list::const_iterator &amp;p_iter)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const t_section_list::const_iterator &amp;</type>
          <declname>p_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="42" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1acef9a9b328552d35dec3b1736d775cf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>ConfParser::const_iterator &amp; xtd::ConfParser::const_iterator::operator=</definition>
        <argsstring>(const const_iterator &amp;p_obj)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>p_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="43" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void xtd::ConfParser::const_iterator::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="46" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a7c5bfdfc6f85ac43469fc6dcd8601b98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void xtd::ConfParser::const_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="47" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xtd::ConfParser::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;p_obj) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>p_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="48" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="182" bodyend="185"/>
        <referencedby refid="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" compoundref="ConfParser_8hh" startline="188" endline="191">operator!=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xtd::ConfParser::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;p_obj) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>p_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="49" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="188" bodyend="191"/>
        <references refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" compoundref="ConfParser_8hh" startline="182" endline="185">operator==</references>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1ConfParser_1_1const__iterator_1ab148b39b2f0e83242aeae432814eae7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const t_result</type>
        <definition>const ConfParser::const_iterator::t_result xtd::ConfParser::const_iterator::operator*</definition>
        <argsstring>(void) const </argsstring>
        <name>operator*</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="50" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="174" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" line="35" column="1" bodyfile="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh" bodystart="34" bodyend="54"/>
    <listofallmembers>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1af09c45149cd53e97902123aa770c0867" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a0fb34a1a672ceecfc5eb756e712bb977" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1acbfbd6e9d13dc0aa004169f245413c89" prot="private" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>m_iter</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator!=</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1ab148b39b2f0e83242aeae432814eae7d" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator*</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator++</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a7c5bfdfc6f85ac43469fc6dcd8601b98" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator++</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1acef9a9b328552d35dec3b1736d775cf5" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator=</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" prot="public" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>operator==</name></member>
      <member refid="classxtd_1_1ConfParser_1_1const__iterator_1a4f49bb5f692aa9b4f8ccf8081a3d9f67" prot="private" virt="non-virtual"><scope>xtd::ConfParser::const_iterator</scope><name>t_result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
