<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classxtd_1_1counters_1_1Perf" kind="class" language="C++" prot="public">
    <compoundname>xtd::counters::Perf</compoundname>
    <basecompoundref refid="classxtd_1_1counters_1_1Composed" prot="public" virt="non-virtual">xtd::counters::Composed</basecompoundref>
    <includes refid="Perf_8hh" local="no">Perf.hh</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classxtd_1_1counters_1_1Perf_1a914e07e96a09b1a1a43ba68eafd96286" prot="private" static="no">
        <type>vector&lt; boost::posix_time::ptime &gt;</type>
        <definition>typedef vector&lt;boost::posix_time::ptime&gt; xtd::counters::Perf::t_timevect</definition>
        <argsstring></argsstring>
        <name>t_timevect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="28" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classxtd_1_1counters_1_1Perf_1a93e934ad70d5b32b14beed5572450abf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Composed</definition>
        <argsstring></argsstring>
        <name>Composed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="25" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxtd_1_1counters_1_1Perf_1ac8a38786e790c65f8c021a6ef0dde4b4" prot="private" static="no" mutable="no">
        <type><ref refid="classxtd_1_1counters_1_1AvgValue" kindref="compound">AvgValue</ref>&lt; uint32_t &gt;</type>
        <definition>AvgValue&lt;uint32_t&gt; xtd::counters::Perf::m_avgRTT</definition>
        <argsstring></argsstring>
        <name>m_avgRTT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="41" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxtd_1_1counters_1_1Perf_1a1b91f3586bf3b2bca5c64f0cc1ae169c" prot="private" static="no" mutable="no">
        <type><ref refid="classxtd_1_1counters_1_1Freq" kindref="compound">Freq</ref></type>
        <definition>Freq xtd::counters::Perf::m_globalPerf</definition>
        <argsstring></argsstring>
        <name>m_globalPerf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="42" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxtd_1_1counters_1_1Perf_1a8195ecbdeded6ea281b06f68e3cb2dc7" prot="private" static="no" mutable="no">
        <type><ref refid="classxtd_1_1counters_1_1InstantFreq" kindref="compound">InstantFreq</ref></type>
        <definition>InstantFreq xtd::counters::Perf::m_instantPerf</definition>
        <argsstring></argsstring>
        <name>m_instantPerf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="43" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxtd_1_1counters_1_1Perf_1a18b9aa344c2b5f939895fb0856cf73f2" prot="private" static="no" mutable="no">
        <type>t_timevect</type>
        <definition>t_timevect xtd::counters::Perf::m_startTimes</definition>
        <argsstring></argsstring>
        <name>m_startTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="44" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxtd_1_1counters_1_1Perf_1a765416ba7ef076acdfc8100d2ea5c9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xtd::counters::Perf::Perf</definition>
        <argsstring>(const string &amp;p_name, uint32_t p_nbThread, uint32_t p_sampeSize=AvgValue&lt; uint32_t &gt;::mcs_defaultSampleSize, uint32_t p_deltaTimeMs=1000)</argsstring>
        <name>Perf</name>
        <param>
          <type>const string &amp;</type>
          <declname>p_name</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>p_nbThread</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>p_sampeSize</declname>
          <defval><ref refid="classxtd_1_1counters_1_1AvgValue" kindref="compound">AvgValue</ref>&lt; uint32_t &gt;::mcs_defaultSampleSize</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>p_deltaTimeMs</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="31" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.cc" bodystart="13" bodyend="26"/>
        <references refid="classxtd_1_1counters_1_1Composed_1ac2efbce59510b352a2d47b3118e0d02a" compoundref="Composed_8cc" startline="15" endline="20">xtd::counters::Composed::addItem</references>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1counters_1_1Perf_1a80692e9b90e8d15a57e2e581591063c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xtd::counters::Perf::startChrono</definition>
        <argsstring>(uint32_t p_requestID)</argsstring>
        <name>startChrono</name>
        <param>
          <type>uint32_t</type>
          <declname>p_requestID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="37" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.cc" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classxtd_1_1counters_1_1Perf_1a905d73c1604d74e28bb56ea2bb4867ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xtd::counters::Perf::stopChrono</definition>
        <argsstring>(uint32_t p_requestID)</argsstring>
        <name>stopChrono</name>
        <param>
          <type>uint32_t</type>
          <declname>p_requestID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="38" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.cc" bodystart="37" bodyend="45"/>
        <references refid="classxtd_1_1counters_1_1Freq_1a9e91ea45fc5e9874dc81ca4bd723efc6" compoundref="Freq_8cc" startline="29" endline="32">xtd::counters::Freq::tick</references>
        <references refid="classxtd_1_1counters_1_1InstantFreq_1a1760f09b25b97545169be189bf99d250" compoundref="InstantFreq_8cc" startline="24" endline="31">xtd::counters::InstantFreq::tick</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>On choisi l&apos;heritage plutot que la composition pour garder une coherence sur la visibilite des methodes internes collect_safe update_safe (qu&apos;on serait onblig√© de mettre en public ou en friend pour faire de la composition). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="220">
        <label>boost::noncopyable</label>
      </node>
      <node id="219">
        <label>xtd::counters::Base</label>
        <link refid="classxtd_1_1counters_1_1Base"/>
        <childnode refid="220" relation="private-inheritance">
        </childnode>
      </node>
      <node id="218">
        <label>xtd::counters::Composed</label>
        <link refid="classxtd_1_1counters_1_1Composed"/>
        <childnode refid="219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="217">
        <label>xtd::counters::Perf</label>
        <link refid="classxtd_1_1counters_1_1Perf"/>
        <childnode refid="218" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="224">
        <label>boost::noncopyable</label>
      </node>
      <node id="223">
        <label>xtd::counters::Base</label>
        <link refid="classxtd_1_1counters_1_1Base"/>
        <childnode refid="224" relation="private-inheritance">
        </childnode>
      </node>
      <node id="222">
        <label>xtd::counters::Composed</label>
        <link refid="classxtd_1_1counters_1_1Composed"/>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="221">
        <label>xtd::counters::Perf</label>
        <link refid="classxtd_1_1counters_1_1Perf"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" line="24" column="1" bodyfile="/home/psyco/dev/xtdcpp/counters/src/Perf.hh" bodystart="23" bodyend="45"/>
    <listofallmembers>
      <member refid="classxtd_1_1counters_1_1Composed_1ac2efbce59510b352a2d47b3118e0d02a" prot="protected" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>addItem</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1ab370a97f3a40bd529e871daedfce60c7" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>Base</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a93e934ad70d5b32b14beed5572450abf" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>Composed</name></member>
      <member refid="classxtd_1_1counters_1_1Composed_1ad604f1fcd711f6df3c0bca1f07956fe8" prot="public" virt="non-virtual" ambiguityscope="xtd::counters::Composed::"><scope>xtd::counters::Perf</scope><name>Composed</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1a64ef0c0b30b420384494fd06c535f84d" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>getName</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1ac8a38786e790c65f8c021a6ef0dde4b4" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_avgRTT</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a1b91f3586bf3b2bca5c64f0cc1ae169c" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_globalPerf</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a8195ecbdeded6ea281b06f68e3cb2dc7" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_instantPerf</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1aeeac2ffcae02eb6341418d708188a353" prot="protected" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_mutex</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1ab07d4a6071bfa8263b24d5992bca6960" prot="protected" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_name</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a18b9aa344c2b5f939895fb0856cf73f2" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>m_startTimes</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a765416ba7ef076acdfc8100d2ea5c9a0" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>Perf</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a80692e9b90e8d15a57e2e581591063c0" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>startChrono</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a905d73c1604d74e28bb56ea2bb4867ef" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>stopChrono</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1a8bb7d024911a4c454c003a18e330d268" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>t_data</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1aa0ea634f1a5e3df87418566a3e8fcbd6" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>t_sptr</name></member>
      <member refid="classxtd_1_1counters_1_1Perf_1a914e07e96a09b1a1a43ba68eafd96286" prot="private" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>t_timevect</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1a5ba0d495403ba1ca4e1c6c30d8038dad" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>update</name></member>
      <member refid="classxtd_1_1counters_1_1Composed_1ab6c13e603340cd00da4edc968d747c4d" prot="protected" virt="virtual"><scope>xtd::counters::Perf</scope><name>update_safe</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1a0c743f0686dc24bada97c2ed31238c02" prot="public" virt="non-virtual"><scope>xtd::counters::Perf</scope><name>visit</name></member>
      <member refid="classxtd_1_1counters_1_1Composed_1a0ef35ed872c3c19d29e2ecc3fa524474" prot="protected" virt="virtual"><scope>xtd::counters::Perf</scope><name>visit_safe</name></member>
      <member refid="classxtd_1_1counters_1_1Base_1aa2bddc0c397ef1e77eff98969ba3bc7d" prot="public" virt="virtual"><scope>xtd::counters::Perf</scope><name>~Base</name></member>
      <member refid="classxtd_1_1counters_1_1Composed_1a28b2cf984f727ae3278464e06b03fad7" prot="public" virt="virtual"><scope>xtd::counters::Perf</scope><name>~Composed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
