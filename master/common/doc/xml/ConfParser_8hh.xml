<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ConfParser_8hh" kind="file" language="C++">
    <compoundname>ConfParser.hh</compoundname>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includes refid="types_8hh" local="yes">types.hh</includes>
    <includedby refid="ConfParser_8cc" local="yes">/home/psyco/dev/xtdcpp/common/src/ConfParser.cc</includedby>
    <incdepgraph>
      <node id="338">
        <label>types.hh</label>
        <link refid="types_8hh"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
      </node>
      <node id="337">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="328">
        <label>string</label>
      </node>
      <node id="330">
        <label>map</label>
      </node>
      <node id="339">
        <label>fstream</label>
      </node>
      <node id="331">
        <label>vector</label>
      </node>
      <node id="332">
        <label>utility</label>
      </node>
      <node id="329">
        <label>sstream</label>
      </node>
      <node id="327">
        <label>/home/psyco/dev/xtdcpp/common/src/ConfParser.hh</label>
        <link refid="ConfParser.hh"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>iostream</label>
      </node>
      <node id="335">
        <label>boost/bind.hpp</label>
      </node>
      <node id="336">
        <label>algorithm</label>
      </node>
      <node id="334">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="340">
        <label>/home/psyco/dev/xtdcpp/common/src/ConfParser.hh</label>
        <link refid="ConfParser.hh"/>
        <childnode refid="341" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>/home/psyco/dev/xtdcpp/common/src/ConfParser.cc</label>
        <link refid="ConfParser_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classxtd_1_1ConfParser" prot="public">xtd::ConfParser</innerclass>
    <innerclass refid="classxtd_1_1ConfParser_1_1const__iterator" prot="public">xtd::ConfParser::const_iterator</innerclass>
    <innernamespace refid="namespacextd">xtd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COMMON_CONFPARSER_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>COMMON_CONFPARSER_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>for<sp/>pair&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>before<sp/>the<sp/>next<sp/>one<sp/>to<sp/>prevent<sp/>a<sp/>bug<sp/>with<sp/>KCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="types_8hh" kindref="compound">types.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacextd" kindref="compound">xtd</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="classxtd_1_1ConfParser" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1ConfParser" kindref="compound">ConfParser</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_value_map;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;string,<sp/>string&gt;<sp/>t_section_data;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector&lt;t_section_data<sp/>&gt;<sp/><sp/><sp/>t_section_list;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classxtd_1_1ConfParser_1a715a3e39fd796046c94546e60f22414d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a715a3e39fd796046c94546e60f22414d" kindref="member">t_param_map</ref>;</highlight></codeline>
<codeline lineno="32" refid="classxtd_1_1ConfParser_1ae1e724e304256650bac2e9b2d63a51df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;ConfParser&gt;<sp/><ref refid="classxtd_1_1ConfParser_1ae1e724e304256650bac2e9b2d63a51df" kindref="member">t_sptr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classxtd_1_1ConfParser_1_1const__iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;const<sp/>char*,<sp/>const<sp/>char*&gt;<sp/>t_result;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">const_iterator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">const_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">const_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_section_list::const_iterator&amp;<sp/>p_iter);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1acef9a9b328552d35dec3b1736d775cf5" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_result<sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1ab148b39b2f0e83242aeae432814eae7d" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>t_section_list::const_iterator<sp/>m_iter;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a5f7729df32b946dba9690494b6fee762" kindref="member">ConfParser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_path);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a5f7729df32b946dba9690494b6fee762" kindref="member">ConfParser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_param_map&amp;<sp/>p_params);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a2a72cefc513e103b86d90785862c620f" kindref="member">getFilePath</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p_name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1ab772ae8e571f1a3f719eca2f9d056d7c" kindref="member">end</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a18fa4083def8aaf86796b9ddbc331daf" kindref="member">begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dval)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dval)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_ival)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dval)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dval)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dval)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83" refid="classxtd_1_1ConfParser_1aa3a209f68c61547141194a305049eeae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/><ref refid="classxtd_1_1ConfParser_1aa3a209f68c61547141194a305049eeae" kindref="member">get_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_key,<sp/>T&amp;<sp/>p_dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>p_default)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50a444bcb3a3fcf8389296c49467f27e1d6" kindref="member">status::ok</ref><sp/>!=<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(p_key,<sp/>p_dest))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_dest<sp/>=<sp/>p_default;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50ac2adf6ecc220f2711801d6e466340183" kindref="member">status::notfound</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50a444bcb3a3fcf8389296c49467f27e1d6" kindref="member">status::ok</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1a7f1323a9ef1f85c73a0bff383e24967c" kindref="member">exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1ae7e7ade9440517b79cc22f21b10df7a5" kindref="member">dumpKeys</ref>(std::ostream&amp;<sp/>p_stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_param_map&amp;<sp/><ref refid="classxtd_1_1ConfParser_1a1be1c2813abf959d85bb6cf695c74dec" kindref="member">getParamMap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/>initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_fileName);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/>parseSection(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p_line,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><sp/>p_readOffset,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>p_prefix[255]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/>parseFile(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p_line);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/>loadFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_filename);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="namespacextd_1a68ed4fe8e9c11116b68efe5b102aec50" kindref="member">status</ref><sp/>evaluateVal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_keyName,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_pLine,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dest,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_maxChar);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_value_map&amp;<sp/><ref refid="classxtd_1_1ConfParser_1a34d7366228341b5501bfec94607dd396" kindref="member">getValueMap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124" refid="classxtd_1_1ConfParser_1a4c58cc4fa96ebaddd180a0c67edb481f" refkind="member"><highlight class="normal"><sp/><sp/>t_value_map<sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a4c58cc4fa96ebaddd180a0c67edb481f" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="125" refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" refkind="member"><highlight class="normal"><sp/><sp/>t_section_list<sp/><ref refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" kindref="member">m_sections</ref>;</highlight></codeline>
<codeline lineno="126" refid="classxtd_1_1ConfParser_1a5203f3b8cb6e9070b33371c9acabbc8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1a5203f3b8cb6e9070b33371c9acabbc8c" kindref="member">m_nblines</ref>;</highlight></codeline>
<codeline lineno="127" refid="classxtd_1_1ConfParser_1abc9e0b073f91de77b76db39bfbc27508" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1abc9e0b073f91de77b76db39bfbc27508" kindref="member">m_filename</ref>;</highlight></codeline>
<codeline lineno="128" refid="classxtd_1_1ConfParser_1abe309999c7964603bde870c7bda16d2e" refkind="member"><highlight class="normal"><sp/><sp/>t_param_map<sp/><sp/><sp/><sp/><ref refid="classxtd_1_1ConfParser_1abe309999c7964603bde870c7bda16d2e" kindref="member">m_paramMap</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ConfParser::t_value_map&amp;</highlight></codeline>
<codeline lineno="133" refid="classxtd_1_1ConfParser_1a34d7366228341b5501bfec94607dd396" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1a34d7366228341b5501bfec94607dd396" kindref="member">ConfParser::getValueMap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1a4c58cc4fa96ebaddd180a0c67edb481f" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">ConfParser::const_iterator::const_iterator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classxtd_1_1ConfParser_1_1const__iterator_1af09c45149cd53e97902123aa770c0867" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">ConfParser::const_iterator::const_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>m_iter<sp/>=<sp/>p_obj.m_iter;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classxtd_1_1ConfParser_1_1const__iterator_1a0fb34a1a672ceecfc5eb756e712bb977" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">ConfParser::const_iterator::const_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t_section_list::const_iterator&amp;<sp/>p_iter)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>m_iter<sp/>=<sp/>p_iter;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">ConfParser::const_iterator</ref>&amp;</highlight></codeline>
<codeline lineno="154" refid="classxtd_1_1ConfParser_1_1const__iterator_1acef9a9b328552d35dec3b1736d775cf5" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1acef9a9b328552d35dec3b1736d775cf5" kindref="member">ConfParser::const_iterator::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>m_iter<sp/>=<sp/>p_obj.m_iter;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classxtd_1_1ConfParser_1_1const__iterator_1a7c5bfdfc6f85ac43469fc6dcd8601b98" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" kindref="member">ConfParser::const_iterator::operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>m_iter++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a6c3a5f37a31973077c3067a8d892aca0" kindref="member">ConfParser::const_iterator::operator++</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>++m_iter;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ConfParser::const_iterator::t_result</highlight></codeline>
<codeline lineno="174" refid="classxtd_1_1ConfParser_1_1const__iterator_1ab148b39b2f0e83242aeae432814eae7d" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1ab148b39b2f0e83242aeae432814eae7d" kindref="member">ConfParser::const_iterator::operator*</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(m_iter-&gt;first.c_str(),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_iter-&gt;second.c_str());</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" kindref="member">ConfParser::const_iterator::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_iter<sp/>==<sp/>p_obj.m_iter;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a380f55fdaee860e5cc7c4f8fcfade27b" kindref="member">ConfParser::const_iterator::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>p_obj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a1acb3ce9b1fb4892d77dcd649ec7768a" kindref="member">operator==</ref>(p_obj);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;</highlight></codeline>
<codeline lineno="195" refid="classxtd_1_1ConfParser_1a2a72cefc513e103b86d90785862c620f" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1a2a72cefc513e103b86d90785862c620f" kindref="member">ConfParser::getFilePath</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1abc9e0b073f91de77b76db39bfbc27508" kindref="member">m_filename</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">ConfParser::const_iterator</ref></highlight></codeline>
<codeline lineno="201" refid="classxtd_1_1ConfParser_1aff7ee8bcd3de4359eff719bc4a6570ba" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" kindref="member">ConfParser::find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>p_key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">const_iterator</ref><sp/>cc_result<sp/>=</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::find_if(<ref refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" kindref="member">m_sections</ref>.begin(),<sp/><ref refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" kindref="member">m_sections</ref>.end(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;t_section_data::first,<sp/>_1)<sp/>==<sp/>p_key);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc_result;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">ConfParser::const_iterator</ref></highlight></codeline>
<codeline lineno="210" refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" kindref="member">ConfParser::find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1a18acbfe7e5828eff045bdcc941626974" kindref="member">find</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(p_name));</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">ConfParser::const_iterator</ref></highlight></codeline>
<codeline lineno="216" refid="classxtd_1_1ConfParser_1a18fa4083def8aaf86796b9ddbc331daf" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1a18fa4083def8aaf86796b9ddbc331daf" kindref="member">ConfParser::begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">const_iterator</ref>(<ref refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" kindref="member">m_sections</ref>.begin());</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1_1const__iterator" kindref="compound">ConfParser::const_iterator</ref></highlight></codeline>
<codeline lineno="222" refid="classxtd_1_1ConfParser_1ab772ae8e571f1a3f719eca2f9d056d7c" refkind="member"><highlight class="normal"><ref refid="classxtd_1_1ConfParser_1ab772ae8e571f1a3f719eca2f9d056d7c" kindref="member">ConfParser::end</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1ConfParser_1_1const__iterator_1a9c17a000740a8558dddb0dd1187939b5" kindref="member">const_iterator</ref>(<ref refid="classxtd_1_1ConfParser_1a100cffb5f33795e50c87ab5fb2a43963" kindref="member">m_sections</ref>.end());</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!COMMON_CONF_HH</highlight></codeline>
    </programlisting>
    <location file="/home/psyco/dev/xtdcpp/common/src/ConfParser.hh"/>
  </compounddef>
</doxygen>
