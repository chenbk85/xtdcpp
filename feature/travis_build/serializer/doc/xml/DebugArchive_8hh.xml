<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="DebugArchive_8hh" kind="file">
    <compoundname>DebugArchive.hh</compoundname>
    <includes local="no">boost/serialization/serialization.hpp</includes>
    <includes local="no">boost/serialization/version.hpp</includes>
    <includes local="no">boost/serialization/base_object.hpp</includes>
    <includes local="no">boost/serialization/nvp.hpp</includes>
    <includes local="no">boost/serialization/list.hpp</includes>
    <includes local="no">boost/serialization/string.hpp</includes>
    <includes local="no">boost/serialization/vector.hpp</includes>
    <includes local="no">boost/serialization/deque.hpp</includes>
    <includes local="no">boost/serialization/utility.hpp</includes>
    <includes local="no">boost/serialization/map.hpp</includes>
    <includes local="no">boost/archive/xml_oarchive.hpp</includes>
    <includes local="no">boost/archive/text_oarchive.hpp</includes>
    <includes local="no">boost/archive/binary_oarchive.hpp</includes>
    <includes local="no">boost/archive/xml_iarchive.hpp</includes>
    <includes local="no">boost/archive/text_iarchive.hpp</includes>
    <includes local="no">boost/archive/binary_iarchive.hpp</includes>
    <includes refid="unorderedmap_8hh" local="yes">objects/unorderedmap.hh</includes>
    <includedby refid="DebugArchive_8cc" local="yes">/home/travis/build/psycofdj/xtdcpp/serializer/src/archives/DebugArchive.cc</includedby>
    <includedby refid="serializer_8hh" local="yes">/home/travis/build/psycofdj/xtdcpp/serializer/src/serializer.hh</includedby>
    <incdepgraph>
      <node id="267">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="264">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="272">
        <label>boost/archive/text_iarchive.hpp</label>
      </node>
      <node id="278">
        <label>boost/serialization/collections_load_imp.hpp</label>
      </node>
      <node id="273">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="266">
        <label>boost/serialization/utility.hpp</label>
      </node>
      <node id="268">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="279">
        <label>boost/serialization/split_free.hpp</label>
      </node>
      <node id="277">
        <label>boost/serialization/collections_save_imp.hpp</label>
      </node>
      <node id="260">
        <label>boost/serialization/base_object.hpp</label>
      </node>
      <node id="270">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="263">
        <label>boost/serialization/string.hpp</label>
      </node>
      <node id="269">
        <label>boost/archive/text_oarchive.hpp</label>
      </node>
      <node id="271">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="259">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="274">
        <label>objects/unorderedmap.hh</label>
        <link refid="unorderedmap_8hh"/>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="262">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="261">
        <label>boost/serialization/nvp.hpp</label>
      </node>
      <node id="276">
        <label>boost/config.hpp</label>
      </node>
      <node id="265">
        <label>boost/serialization/deque.hpp</label>
      </node>
      <node id="257">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/archives/DebugArchive.hh</label>
        <link refid="DebugArchive.hh"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>boost/serialization/serialization.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="284">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/objects/Doc.cc</label>
        <link refid="Doc_8cc"/>
      </node>
      <node id="283">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/objects/Doc.hh</label>
        <link refid="Doc_8hh"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/serializer.cc</label>
        <link refid="serializer_8cc"/>
      </node>
      <node id="282">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/serializer.hh</label>
        <link refid="serializer_8hh"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/archives/DebugArchive.cc</label>
        <link refid="DebugArchive_8cc"/>
      </node>
      <node id="280">
        <label>/home/travis/build/psycofdj/xtdcpp/serializer/src/archives/DebugArchive.hh</label>
        <link refid="DebugArchive.hh"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classxtd_1_1serializer_1_1DebugXmlOArchive" prot="public">xtd::serializer::DebugXmlOArchive</innerclass>
    <innerclass refid="classxtd_1_1serializer_1_1DebugXmlIArchive" prot="public">xtd::serializer::DebugXmlIArchive</innerclass>
    <innerclass refid="classxtd_1_1serializer_1_1DebugTextOArchive" prot="public">xtd::serializer::DebugTextOArchive</innerclass>
    <innerclass refid="classxtd_1_1serializer_1_1DebugTextIArchive" prot="public">xtd::serializer::DebugTextIArchive</innerclass>
    <innerclass refid="classxtd_1_1serializer_1_1DebugBinOArchive" prot="public">xtd::serializer::DebugBinOArchive</innerclass>
    <innerclass refid="classxtd_1_1serializer_1_1DebugBinIArchive" prot="public">xtd::serializer::DebugBinIArchive</innerclass>
    <innernamespace refid="namespacextd">xtd</innernamespace>
    <innernamespace refid="namespacextd_1_1serializer">xtd::serializer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SERIALIZER_DEBUGARCHIVE_HH_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SERIALIZER_DEBUGARCHIVE_HH_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/serialization.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/version.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/base_object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/nvp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/list.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/deque.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/utility.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/serialization/map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/xml_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/text_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/binary_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/xml_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/text_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/archive/binary_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="unorderedmap_8hh" kindref="compound">objects/unorderedmap.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacextd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xtd<sp/>{</highlight></codeline>
<codeline lineno="23" refid="namespacextd_1_1serializer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="structxtd_1_1serializer_1_1serializer" kindref="compound">serializer</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classxtd_1_1serializer_1_1DebugXmlOArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">DebugXmlOArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::xml_oarchive_impl&lt;DebugXmlOArchive&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::xml_oarchive_impl&lt;DebugXmlOArchive&gt;<sp/>base;</highlight></codeline>
<codeline lineno="28" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1ade7e327f8089db178808693b17013b37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">DebugXmlOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="29" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1ae9a53f0a6d08579fd714365dec459e66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_xml_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">DebugXmlOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="30" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1aff4ee095fcc036756c7326731a15e9b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1aff4ee095fcc036756c7326731a15e9b7" kindref="member">DebugXmlOArchive</ref>(std::ostream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p_debugState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(p_debugState),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusSaved(false)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1a537495d2f70d2553edf308bafd0a6327" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">DebugXmlOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1a537495d2f70d2553edf308bafd0a6327" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusSaved)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusSaved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53" refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1a8e0706fca2bb1dd85556b537db740baf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">DebugXmlOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive_1a8e0706fca2bb1dd85556b537db740baf" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>save<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusSaved;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classxtd_1_1serializer_1_1DebugXmlIArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive" kindref="compound">DebugXmlIArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::xml_iarchive_impl&lt;DebugXmlIArchive&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::xml_iarchive_impl&lt;DebugXmlIArchive&gt;<sp/>base;</highlight></codeline>
<codeline lineno="73" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a54f75e33da74496cd06e608f4bec85dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive" kindref="compound">DebugXmlIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="74" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a54affbd4684171cc9e5cabf2db73ffe5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_xml_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive" kindref="compound">DebugXmlIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="75" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a877cd247551b625bec79846a8b9274d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a877cd247551b625bec79846a8b9274d1" kindref="member">DebugXmlIArchive</ref>(std::istream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(false),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusLoaded(false)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a40060fc623b46cb0332a7ea56b1d9148" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive" kindref="compound">DebugXmlIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a40060fc623b46cb0332a7ea56b1d9148" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusLoaded)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusLoaded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a523764ab4e37ba9cb07dc7d7269ca507" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive" kindref="compound">DebugXmlIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a523764ab4e37ba9cb07dc7d7269ca507" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>load<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a40860da9e1a849931364d86b56557357" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1serializer_1_1DebugXmlIArchive_1a40860da9e1a849931364d86b56557357" kindref="member">getDebugState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusLoaded;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classxtd_1_1serializer_1_1DebugTextOArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive" kindref="compound">DebugTextOArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::text_oarchive_impl&lt;DebugTextOArchive&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::text_oarchive_impl&lt;DebugTextOArchive&gt;<sp/>base;</highlight></codeline>
<codeline lineno="123" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1a162d16419084090d0d406eb1f23dfa6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugTextOArchive" kindref="compound">DebugTextOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="124" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1ac712c773113f2ae2a71ee1f638877ab2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_text_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugTextOArchive" kindref="compound">DebugTextOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="125" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1ac8705c1c468911d8b0c74b29156a8b8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive_1ac8705c1c468911d8b0c74b29156a8b8e" kindref="member">DebugTextOArchive</ref>(std::ostream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p_debugState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(p_debugState),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusSaved(false)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="136" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1a03483bda8da712cbd5f789bcd3c20659" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive" kindref="compound">DebugTextOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive_1a03483bda8da712cbd5f789bcd3c20659" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusSaved)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusSaved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="148" refid="classxtd_1_1serializer_1_1DebugTextOArchive_1ab5bd315f1a6d164814d0ae28fca9ab1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive" kindref="compound">DebugTextOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugTextOArchive_1ab5bd315f1a6d164814d0ae28fca9ab1d" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>save<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusSaved;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classxtd_1_1serializer_1_1DebugTextIArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive" kindref="compound">DebugTextIArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::text_iarchive_impl&lt;DebugTextIArchive&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::text_iarchive_impl&lt;DebugTextIArchive&gt;<sp/>base;</highlight></codeline>
<codeline lineno="168" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1af9e30d7c11da39f8fdf5fd8c21e4e831" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugTextIArchive" kindref="compound">DebugTextIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="169" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a6fe2ce7d54600795abdea507c1270a7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_text_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugTextIArchive" kindref="compound">DebugTextIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="170" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a97b036aced6a2612a505bca126b8e4da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a97b036aced6a2612a505bca126b8e4da" kindref="member">DebugTextIArchive</ref>(std::istream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(false),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusLoaded(false)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="180" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a7fb53e65348749bad9e2b945b03c1e9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive" kindref="compound">DebugTextIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a7fb53e65348749bad9e2b945b03c1e9a" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusLoaded)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusLoaded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="192" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a8c9fb4b382705609a5cd1570c63818f1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive" kindref="compound">DebugTextIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a8c9fb4b382705609a5cd1570c63818f1" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>load<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a3ad42e3b468f60546bc76b21247ee0ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1serializer_1_1DebugTextIArchive_1a3ad42e3b468f60546bc76b21247ee0ca" kindref="member">getDebugState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusLoaded;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classxtd_1_1serializer_1_1DebugBinOArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive" kindref="compound">DebugBinOArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::binary_oarchive_impl&lt;DebugBinOArchive,<sp/>std::ostream::char_type,<sp/>std::ostream::traits_type&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::archive::binary_oarchive_impl&lt;DebugBinOArchive,<sp/>std::ostream::char_type,<sp/>std::ostream::traits_type&gt;<sp/>base;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a8319d9e2864d97444125a3c4701611a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugBinOArchive" kindref="compound">DebugBinOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="220" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a7b9f0abe54deccaffaf59bd14a6f9f53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_binary_oarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugBinOArchive" kindref="compound">DebugBinOArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="221" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a24ef5240df842821499a32be217018ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a24ef5240df842821499a32be217018ac" kindref="member">DebugBinOArchive</ref>(std::ostream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p_debugState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(p_debugState),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusSaved(false)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="232" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a47872bf2656b80e613d1b6d946437be2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive" kindref="compound">DebugBinOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a47872bf2656b80e613d1b6d946437be2" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusSaved)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusSaved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="244" refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a6312cd274de08133d15bcda75d61762e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive" kindref="compound">DebugBinOArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugBinOArchive_1a6312cd274de08133d15bcda75d61762e" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>save<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;saving<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusSaved;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classxtd_1_1serializer_1_1DebugBinIArchive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive" kindref="compound">DebugBinIArchive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::archive::binary_iarchive_impl&lt;DebugBinIArchive,<sp/>std::istream::char_type,<sp/>std::istream::traits_type&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::archive::binary_iarchive_impl&lt;DebugBinIArchive,<sp/>std::istream::char_type,<sp/>std::istream::traits_type&gt;<sp/>base;</highlight></codeline>
<codeline lineno="265" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1aace6c76e9b138089c32705b6ec13b0e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::detail::interface_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugBinIArchive" kindref="compound">DebugBinIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="266" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1abc4efd1d58236e3dbfef39240b5457d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::archive::basic_binary_iarchive&lt;<ref refid="classxtd_1_1serializer_1_1DebugBinIArchive" kindref="compound">DebugBinIArchive</ref>&gt;;</highlight></codeline>
<codeline lineno="267" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1aaca003bb8a4fc59424e4025130da4edd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive_1aaca003bb8a4fc59424e4025130da4edd" kindref="member">boost::archive::save_access</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a4ea7040c4449afdc0a3559e2b7bc6625" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a4ea7040c4449afdc0a3559e2b7bc6625" kindref="member">DebugBinIArchive</ref>(std::istream&amp;<sp/>p_os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_flags<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>base(p_os,<sp/>p_flags),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>m_debugMode(false),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>m_statusLoaded(false)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="277" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a14ea4c855993c582b1bfd9a2c6528384" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive" kindref="compound">DebugBinIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a14ea4c855993c582b1bfd9a2c6528384" kindref="member">operator*</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>m_statusLoaded)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>status...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>base::operator&amp;(boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">,<sp/>m_debugMode));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_statusLoaded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base::operator&amp;(p_value);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="289" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a16c6f8a7cfaf497756c3edbfa16b9c0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive" kindref="compound">DebugBinIArchive</ref>&amp;<sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a16c6f8a7cfaf497756c3edbfa16b9c0c" kindref="member">operator/</ref>(T&amp;<sp/>p_value)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;should<sp/>load<sp/>debug<sp/>field<sp/>?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugMode)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;loading<sp/>debug<sp/>field...&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>p_value;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a94745bb397fc67967d2ec07dc84d8c7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classxtd_1_1serializer_1_1DebugBinIArchive_1a94745bb397fc67967d2ec07dc84d8c7e" kindref="member">getDebugState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="301"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debugMode;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_statusLoaded;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(<ref refid="classxtd_1_1serializer_1_1DebugXmlOArchive" kindref="compound">xtd::serializer::DebugXmlOArchive</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(xtd::serializer::DebugXmlIArchive)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(xtd::serializer::DebugTextOArchive)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(xtd::serializer::DebugTextIArchive)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(xtd::serializer::DebugBinOArchive)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">BOOST_SERIALIZATION_REGISTER_ARCHIVE(xtd::serializer::DebugBinIArchive)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SERIALIZER_DEBUGARCHIVE_HH_</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/psycofdj/xtdcpp/serializer/src/archives/DebugArchive.hh"/>
  </compounddef>
</doxygen>
